{"version":3,"sources":["globalStyle.ts","components/Section.tsx","data.ts","util.ts","components/Experience.tsx","components/Skills.tsx","components/Link.tsx","components/Projects.tsx","components/Education.tsx","components/Other.tsx","components/Contacts.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["breakpoints","GlobalStyles","createGlobalStyle","theme","palette","background","text","Section","styled","section","spacing","sectionMargin","SectionItem","div","skills","languages","other","experience","title","place","time","tools","description","projects","url","affiliation","educations","school","useDevice","windowWidth","useState","window","innerWidth","width","setWidth","useEffect","onWindowResize","addEventListener","removeEventListener","useWindowWidth","ExperienceList","ul","withTimeline","css","Experience","device","map","data","key","join","Skills","Link","props","href","target","rel","children","Project","Projects","project","icon","linkIcon","Education","education","Other","ContactList","aside","appTopMargin","position","columnWidth","Contacts","githubAlt","linkedinAlt","mailIcon","Main","main","NameSection","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","numberOfColumns","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb69364d.chunk.js","sourcesContent":["import { createGlobalStyle, DefaultTheme } from 'styled-components'\r\n\r\nexport const breakpoints = {\r\n  mobile: 600,\r\n  tablet: 960,\r\n  laptop: 1280,\r\n  desktop: 1920,\r\n}\r\n\r\nexport const defaultTheme: DefaultTheme = {\r\n  palette: {\r\n    background: '#EEEEEE',\r\n    text: '#2F576E',\r\n  },\r\n  spacing: {\r\n    numberOfColumns: 12,\r\n    columnWidth: 'calc(100vw / 12)',\r\n    appTopMargin: 'calc(100vw / 12)',\r\n    sectionMargin: '0 calc(100vw / 12) 4rem calc(100vw / 12)',\r\n  },\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n    font-family: 'Barlow', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  body {\r\n    background-color: ${({ theme }) => theme.palette.background};\r\n    color: ${({ theme }) => theme.palette.text};\r\n    margin: 0;\r\n  }\r\n\r\n  /* Scrollbar */\r\n  *::-webkit-scrollbar {\r\n    width: 5px;\r\n    height: 5px;\r\n  }\r\n  *::-webkit-scrollbar-track {\r\n    background: none;\r\n  }\r\n  *::-webkit-scrollbar-thumb {\r\n    background-color: ${({ theme }) => theme.palette.text};\r\n    border-radius: 10px;\r\n    border: none;\r\n  }\r\n  * {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: ${({ theme }) => theme.palette.text + ' #ffffff00'};\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { breakpoints } from '../globalStyle'\r\n\r\nexport const Section = styled.section`\r\n  margin: ${({ theme }) => theme.spacing.sectionMargin};\r\n  max-width: ${breakpoints.desktop}px;\r\n\r\n  h1 {\r\n    font-weight: normal;\r\n    font-size: 2rem;\r\n  }\r\n\r\n  h2 {\r\n    font-weight: semibold;\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nexport const SectionItem = styled.div`\r\n  margin-bottom: 2rem;\r\n`\r\n","type Skills = {\r\n  languages: string[]\r\n  other: string[]\r\n}\r\n\r\ntype Experience = {\r\n  title: string\r\n  place: string\r\n  time: string\r\n  description?: string\r\n  tools: string[]\r\n}\r\n\r\ntype Project = {\r\n  title: string\r\n  affiliation?: string\r\n  time: string\r\n  description: string\r\n  url?: string\r\n}\r\n\r\ntype Other = {\r\n  title: string\r\n  description: string\r\n  time?: string\r\n}\r\n\r\ntype Education = {\r\n  title: string\r\n  school: string\r\n  place: string\r\n  time: string\r\n}\r\n\r\nexport const skills: Skills = {\r\n  languages: ['Go', 'TypeScript', 'JavaScript', 'HTML', 'CSS', 'Python', 'C/C++'],\r\n  other: ['Git', 'GitHub', 'React', 'Figma', 'SPFx', 'AWS', 'GCP', 'Visual Studio Code'],\r\n}\r\n\r\nexport const experience: Experience[] = [\r\n  {\r\n    title: 'Junior Software Developer',\r\n    place: '6 Degrees Health, Hillsboro, OR',\r\n    time: '8/2020 - present',\r\n    tools: ['Go', 'TypeScript', 'Javascript', 'React', 'PostgreSQL', 'MongoDB', 'GCP'],\r\n  },\r\n  {\r\n    title: 'Web Developer Intern',\r\n    place: 'Portland General Electric, Portland, OR',\r\n    time: '9/2019 - 12/2019',\r\n    description: 'Designed and implemented a new internal portal to reprocess errors, which connects to on-premise SQL servers and IBM DataPower SOAP endpoints',\r\n    tools: ['SharePoint Online', 'SPFx', 'React', 'TypeScript', 'AWS'],\r\n  },\r\n  {\r\n    title: 'SharePoint Web Developer Intern',\r\n    place: 'Portland General Electric, Portland, OR',\r\n    time: '6/2019 - 9/2019',\r\n    description: 'Collaborated with a team of 7 to develop a new company intranet site using SharePoint Online and Microsoft products',\r\n    tools: ['SharePoint Online', 'SPFx', 'TypeScript', 'MS Flow', 'MS PowerApps'],\r\n  },\r\n]\r\n\r\nexport const projects: Project[] = [\r\n  {\r\n    title: 'Recipedia',\r\n    time: '4/2020 - 6/2020',\r\n    description: 'Web app for recipes search and dashboard',\r\n    url: 'https://github.com/halyngoc/recipedia',\r\n  },\r\n  {\r\n    title: 'Kanabi UI',\r\n    affiliation: 'City of Portland (PSU capstone project)',\r\n    time: '1/2020 - 6/2020',\r\n    description: 'Front-end web UI for the City of Portlandâ€™s Cannabis database',\r\n    url: 'https://github.com/FireAnts-PSU-Capstone-team/cannabis-db-ui',\r\n  },\r\n]\r\n\r\nexport const other: Other = {\r\n  title: 'Student groups',\r\n  description: 'Member of PSU Viking Robotics Society',\r\n  time: '4/2018 - 3/2020',\r\n}\r\n\r\nexport const educations: Education[] = [\r\n  {\r\n    title: 'BS Computer Science',\r\n    school: 'Portland State University',\r\n    place: 'Portland, OR',\r\n    time: '3/2018 - 6/2020'\r\n  },\r\n  {\r\n    title: 'Computer Science',\r\n    school: 'Portland Community College',\r\n    place: 'Portland, OR',\r\n    time: '3/2016 - 6/2018'\r\n  },\r\n]\r\n","import { useState, useEffect } from 'react'\r\nimport { breakpoints } from './globalStyle'\r\n\r\ntype Device = 'mobile' | 'tablet' | 'laptop' | 'desktop'\r\n\r\nfunction useWindowWidth(): number {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    const onWindowResize = () => setWidth(window.innerWidth)\r\n    window.addEventListener('resize', onWindowResize)\r\n    return () => window.removeEventListener('resize', onWindowResize)\r\n  })\r\n\r\n  return width\r\n}\r\n\r\nexport function useDevice(): Device {\r\n  const windowWidth = useWindowWidth()\r\n\r\n  if (windowWidth < breakpoints.mobile) return 'mobile'\r\n  else if (windowWidth < breakpoints.tablet) return 'tablet'\r\n  else if (windowWidth < breakpoints.laptop) return 'laptop'\r\n  else return 'desktop'\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { Section } from './Section'\r\nimport { experience } from '../data'\r\nimport { useDevice } from '../util'\r\n\r\nconst ExperienceList = styled.ul<{ withTimeline: boolean }>`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-left: 1rem;\r\n  width: fit-content;\r\n  max-width: calc(100% - 3rem);\r\n  position: relative;\r\n  left: -3rem;\r\n\r\n  p {\r\n    margin: 0.75rem 0;\r\n  }\r\n\r\n  > li {\r\n    position: relative;\r\n    margin: 0 0 2rem 2rem;\r\n  }\r\n\r\n  ${({ withTimeline }) =>\r\n    withTimeline &&\r\n    css`\r\n      ::before {\r\n        content: ' ';\r\n        position: absolute;\r\n        top: 0;\r\n        left: -2.5px;\r\n        width: 5px;\r\n        height: 100%;\r\n        background-color: ${({ theme }) => theme.palette.text};\r\n      }\r\n\r\n      > li::before {\r\n        content: ' ';\r\n        position: absolute;\r\n        top: -0.2rem;\r\n        left: -3rem;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        border: 5px solid ${({ theme }) => theme.palette.text};\r\n        background-color: ${({ theme }) => theme.palette.background};\r\n        border-radius: 1rem;\r\n      }\r\n    `}\r\n`\r\n\r\nexport default function Experience() {\r\n  const device = useDevice()\r\n  return (\r\n    <Section>\r\n      <h1>Experience</h1>\r\n      <ExperienceList withTimeline={device !== 'mobile'}>\r\n        {experience.map(data => (\r\n          <li key={data.title + data.place}>\r\n            <h2>{data.title}</h2>\r\n            <p>{data.place}</p>\r\n            <p>{data.time}</p>\r\n            {data.description && <p>{data.description}</p>}\r\n            <p>\r\n              <i>{data.tools.join(', ')}</i>\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ExperienceList>\r\n    </Section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Section, SectionItem } from './Section'\r\nimport { skills } from '../data'\r\n\r\nexport default function Skills() {\r\n  return (\r\n    <Section>\r\n      <h1>Skills</h1>\r\n      <SectionItem>\r\n        <h2>Languages</h2>\r\n        <p>{skills.languages.join(', ')}</p>\r\n      </SectionItem>\r\n      <SectionItem>\r\n        <h2>Other</h2>\r\n        <p>{skills.other.join(', ')}</p>\r\n      </SectionItem>\r\n    </Section>\r\n  )\r\n}\r\n","import React, { HTMLProps } from 'react'\r\n\r\nexport default function Link(props: HTMLProps<HTMLLinkElement>) {\r\n  return (\r\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {props.children}\r\n    </a>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Section, SectionItem } from './Section'\r\nimport { projects } from '../data'\r\nimport linkIcon from '@iconify/icons-uil/external-link-alt'\r\nimport InlineIcon from '@iconify/react'\r\nimport styled from 'styled-components'\r\nimport Link from './Link'\r\n\r\nconst Project = styled(SectionItem)`\r\n  h2 {\r\n    display: inline;\r\n    margin-right: 0.4rem;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  svg {\r\n    transform: translateY(0.1rem) !important;\r\n  }\r\n`\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <Section>\r\n      <h1>Projects</h1>\r\n      {projects.map(project => (\r\n        <Project key={project.title}>\r\n          {project.url ? (\r\n            <Link title=\"GitHub\" href={project.url}>\r\n              <h2>{project.title}</h2>\r\n              <InlineIcon icon={linkIcon} />\r\n            </Link>\r\n          ) : (\r\n            <h2>{project.title}</h2>\r\n          )}\r\n          {project.affiliation && <p>{project.affiliation}</p>}\r\n          <p>{project.time}</p>\r\n          <p>{project.description}</p>\r\n        </Project>\r\n      ))}\r\n    </Section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Section, SectionItem } from './Section'\r\nimport { educations } from '../data'\r\n\r\nexport default function Education() {\r\n  return (\r\n    <Section>\r\n      <h1>Education</h1>\r\n      {educations.map(education => (\r\n        <SectionItem key={education.title + education.school}>\r\n          <h2>{education.title}</h2>\r\n          <p>{education.school}</p>\r\n          <p>{education.place}</p>\r\n          <p>{education.time}</p>\r\n        </SectionItem>\r\n      ))}\r\n    </Section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Section } from './Section'\r\nimport { other } from '../data'\r\n\r\nexport default function Other() {\r\n  return (\r\n    <Section>\r\n      <h1>Other</h1>\r\n      <h2>{other.title}</h2>\r\n      <p>\r\n        {other.description}\r\n        {other.time && ` (${other.time})`}\r\n      </p>\r\n    </Section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { Icon } from '@iconify/react'\r\nimport githubAlt from '@iconify/icons-uil/github-alt'\r\nimport mailIcon from '@iconify/icons-uil/envelope-alt'\r\nimport linkedinAlt from '@iconify/icons-uil/linkedin-alt'\r\nimport Link from './Link'\r\nimport { useDevice } from '../util'\r\n\r\nconst ContactList = styled.aside<{ position: 'right' | 'left' }>`\r\n  position: absolute;\r\n  top: calc(${({ theme }) => theme.spacing.appTopMargin} + 1rem);\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  svg {\r\n    height: 2.5rem;\r\n  }\r\n\r\n  li {\r\n    margin: 0 1rem 0.5rem 0;\r\n    font-size: 2rem;\r\n  }\r\n\r\n  a {\r\n    color: ${({ theme }) => theme.palette.text};\r\n    text-decoration: none;\r\n    border-radius: 20px;\r\n    display: block;\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    text-align: center;\r\n  }\r\n\r\n  a:focus,\r\n  a:focus-visible,\r\n  a:hover,\r\n  a:active {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.palette.text};\r\n  }\r\n\r\n  a:active {\r\n    color: ${({ theme }) => theme.palette.background};\r\n    background-color: ${({ theme }) => theme.palette.text};\r\n  }\r\n\r\n  ${({ position }) =>\r\n    position === 'right'\r\n      ? css`\r\n          right: ${({ theme }) => theme.spacing.columnWidth};\r\n        `\r\n      : css`\r\n          left: calc(${({ theme }) => theme.spacing.columnWidth} - 3.5rem);\r\n        `}\r\n`\r\n\r\nexport default function Contacts() {\r\n  const device = useDevice()\r\n  return (\r\n    <ContactList\r\n      position={device === 'mobile' || device === 'tablet' ? 'right' : 'left'}\r\n    >\r\n      <ul>\r\n        <li>\r\n          <Link title=\"Github\" href=\"https://github.com/halyngoc\">\r\n            <Icon icon={githubAlt} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link title=\"LinkedIn\" href=\"https://www.linkedin.com/in/halyngoc\">\r\n            <Icon icon={linkedinAlt} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link title=\"email\" href=\"mailto:haly.inbox@gmail.com\">\r\n            <Icon icon={mailIcon} />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </ContactList>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Section } from './components/Section'\r\nimport Experience from './components/Experience'\r\nimport Skills from './components/Skills'\r\nimport Projects from './components/Projects'\r\nimport Education from './components/Education'\r\nimport Other from './components/Other'\r\nimport Contacts from './components/Contacts'\r\n\r\nconst Main = styled.main`\r\n  margin: ${({ theme }) => theme.spacing.appTopMargin} 0;\r\n`\r\n\r\nconst NameSection = styled(Section)`\r\n  div {\r\n    font-family: 'Corben', cursive;\r\n    font-size: 3.5rem;\r\n    margin-left: 0;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.2rem;\r\n  }\r\n`\r\n\r\nexport default function App() {\r\n  return (\r\n    <Main>\r\n      <NameSection>\r\n        <div>Ha Ly</div>\r\n        <span>Software Engineer</span>\r\n      </NameSection>\r\n      <Contacts />\r\n      <Skills />\r\n      <Experience />\r\n      <Projects />\r\n      <Education />\r\n      <Other />\r\n    </Main>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log('New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n              alert('New content available! Close and reopen to see the updates.');\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { GlobalStyles, defaultTheme } from './globalStyle'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <GlobalStyles />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}