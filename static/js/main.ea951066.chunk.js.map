{"version":3,"sources":["resume.pdf","globalStyle.js","util.js","components/Nav.jsx","components/HomePage.jsx","components/MyWorkPage.jsx","components/MyProjectsPage.jsx","components/Logo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","breakpoints","theme","background","watermark","text","accent","accent2","GlobalStyles","createGlobalStyle","isOneColumnLayout","device","useDevice","windowWidth","useState","window","innerWidth","width","setWidth","useEffect","onWindowResize","addEventListener","removeEventListener","useWindowWidth","HorizontalNav","styled","nav","animateButtonClick","x","transform","interpolate","range","output","boxShadow","Math","round","toString","padStart","getColorAlphaHexValue","NavItem","itemId","label","onClick","selected","useSpring","from","to","smooth","duration","button","style","NavContent","onItemClick","selectedItem","Nav","props","Page","section","GreetingText","div","Name","span","Title","Contacts","ul","HomePage","id","title","href","target","rel","icon","githubAlt","envelopeIcon","phoneIcon","resume","download","fileIcon","MyWorkPage","MyProjectsPage","LogoSvg","xmlns","height","viewBox","preserveAspectRatio","d","Logo","wrapper","Wrapper","Watermark","AppContainer","main","App","currentPage","setCurrentPage","item","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea951066.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.eb853075.pdf\";","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const breakpoints = {\r\n  mobile: 600,\r\n  tablet: 960,\r\n  laptop: 1280,\r\n  desktop: 1920,\r\n}\r\n\r\nexport const theme = {\r\n  background: '#ECF0F1', // light blue\r\n  watermark: '#D7E5E9',         // light blue\r\n  text: '#34495E',       // dark blue \r\n  accent: '#3498DB',     // blue\r\n  accent2: '#F8B500',    // yellow\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  body {\r\n    background-color: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.text};\r\n    margin: 0;\r\n  }\r\n\r\n  /* Scrollbar */\r\n  *::-webkit-scrollbar {\r\n    width: 5px;\r\n    height: 5px;\r\n  }\r\n  *::-webkit-scrollbar-track {\r\n    background: none;\r\n  }\r\n  *::-webkit-scrollbar-thumb {\r\n    background-color: ${({ theme }) => theme.text};\r\n    border-radius: 10px;\r\n    border: none;\r\n  }\r\n  * {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: ${({ theme }) => theme.text + ' #ffffff00'};\r\n  }\r\n`\r\n","import { useState, useEffect } from 'react'\r\nimport { breakpoints } from './globalStyle'\r\n\r\nexport function useWindowWidth() {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    const onWindowResize = () => setWidth(window.innerWidth)\r\n    window.addEventListener('resize', onWindowResize)\r\n    return () => window.removeEventListener('resize', onWindowResize)\r\n  })\r\n\r\n  return width\r\n}\r\n\r\nconst isOneColumnLayout = device => device === 'mobile' || device === 'tablet'\r\n\r\nexport function useDevice() {\r\n  const windowWidth = useWindowWidth()\r\n  let device = ''\r\n\r\n  if (windowWidth < breakpoints.mobile) device = 'mobile'\r\n  else if (windowWidth < breakpoints.tablet) device = 'tablet'\r\n  else if (windowWidth < breakpoints.laptop) device = 'laptop'\r\n  else device = 'desktop'\r\n\r\n  return [device, isOneColumnLayout(device)]\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { theme } from '../globalStyle'\r\nimport { useDevice } from '../util'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Link } from 'react-scroll'\r\n\r\nconst HorizontalNav = styled.nav`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: ${theme.background};\r\n  z-index: 1;\r\n  width: 100%;\r\n  border-bottom-left-radius: 10px;\r\n  border-bottom-right-radius: 10px;\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    text-align: center;\r\n  }\r\n\r\n  li {\r\n    display: inline;\r\n    margin: 0 1rem;\r\n  }\r\n\r\n  button {\r\n    background-color: ${theme.background};\r\n    border: 0;\r\n    border-radius: 20px;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    color: ${theme.text};\r\n  }\r\n\r\n  button:focus, button:hover {\r\n    outline: none;\r\n    box-shadow:\r\n      0 0 0 3px ${theme.background},\r\n      0 0 0 5px ${theme.text}7F;\r\n    ;\r\n  }\r\n`\r\n\r\nfunction getColorAlphaHexValue(x) {\r\n  if (x < 0 || x > 255) return '00'\r\n  else return Math.round(x).toString(16).padStart(2, '0')\r\n}\r\n\r\nexport function animateButtonClick(x) {\r\n  return {\r\n    transform: x\r\n      .interpolate({\r\n        range: [0, 0.2, 1],\r\n        output: [1, 1.1, 1],\r\n      })\r\n      .interpolate(x => `scale(${x})`),\r\n    boxShadow: x\r\n      .interpolate({ range: [0, 0.2, 1], output: [0, 127, 255] })\r\n      .interpolate(x => `0 0 0 3px ${theme.background}, 0 0 0 5px ${theme.text}${getColorAlphaHexValue(x)}`)\r\n  }\r\n}\r\n\r\nfunction NavItem({ itemId, label, onClick, selected }) {\r\n  const { x } = useSpring({ from: { x: 0 }, x: selected ? 1 : 0 })\r\n\r\n  return (\r\n    <Link to={itemId} smooth duration={300}>\r\n      <animated.button\r\n        onClick={() => onClick(itemId)}\r\n        style={selected ? animateButtonClick(x) : null}\r\n      >\r\n        {label}\r\n      </animated.button>\r\n    </Link>\r\n  )\r\n}\r\n\r\nfunction NavContent({ onItemClick, selectedItem }) {\r\n  return (\r\n    <ul>\r\n      <li><NavItem onClick={onItemClick} selected={selectedItem === 'home'} itemId=\"home\" label=\"Home\" /></li>\r\n      <li><NavItem onClick={onItemClick} selected={selectedItem === 'my work'} itemId=\"my work\" label=\"My work\" /></li>\r\n      <li><NavItem onClick={onItemClick} selected={selectedItem === 'my projects'} itemId=\"my projects\" label=\"My projects\" /></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default function Nav(props) {\r\n  const [, isOneColumnLayout] = useDevice()\r\n\r\n  if (!isOneColumnLayout) return <HorizontalNav><NavContent {...props} /></HorizontalNav>\r\n  else return null\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { theme } from '../globalStyle'\r\nimport { Icon } from '@iconify/react'\r\nimport githubAlt from '@iconify/icons-uil/github-alt'\r\nimport envelopeIcon from '@iconify/icons-uil/envelope'\r\nimport phoneIcon from '@iconify/icons-uil/phone'\r\nimport fileIcon from '@iconify/icons-uil/file'\r\nimport resume from '../resume.pdf'\r\nimport { useDevice } from '../util'\r\n\r\nconst Page = styled.section`\r\n  height: 900px;\r\n  padding-top: 5rem;\r\n`\r\n\r\nconst GreetingText = styled.div`\r\n  margin: ${props => props.isOneColumnLayout ? '1rem 0 0 0' : '1rem 0 0 5%'};\r\n\r\n  p, span {\r\n    font-family: Gloria Hallelujah, cursive;\r\n    font-size: ${props => props.isOneColumnLayout ? '2rem' : '3.5rem'};\r\n    margin: 0;\r\n    text-align: ${props => props.isOneColumnLayout ? 'center' : 'left'};\r\n  }\r\n`\r\n\r\nconst Name = styled.span`\r\ncolor: ${ theme.accent};\r\n`\r\n\r\nconst Title = styled.span`\r\n  color: ${theme.accent2};\r\n`\r\n\r\nconst Contacts = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: ${props => props.isOneColumnLayout ? '2rem auto 0 auto' : '3rem 0 0 5%'};\r\n  width: fit-content;\r\n\r\n  li {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  svg {\r\n    font-size: 2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  a {\r\n    color: ${theme.text};\r\n    text-decoration: none;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 20px;\r\n  }\r\n\r\n  a:focus, a:hover {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${theme.text}7F;\r\n  }\r\n\r\n  a:active {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${theme.text};\r\n  }\r\n`\r\n\r\nexport default function HomePage() {\r\n  const [, isOneColumnLayout] = useDevice()\r\n\r\n  return (\r\n    <Page id=\"home\">\r\n      <GreetingText isOneColumnLayout={isOneColumnLayout}>\r\n        <p>Hi, my name is <Name>Ha Ly</Name></p>\r\n        <p>and I'm a <Title>web developer</Title>.</p>\r\n      </GreetingText>\r\n      <Contacts isOneColumnLayout={isOneColumnLayout}>\r\n        <li>\r\n          <a title=\"github\" href=\"https://github.com/halyngoc\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Icon icon={githubAlt} />\r\n            github.com/halyngoc\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a title=\"email\" href=\"mailto:haly.inbox@gmail.com\">\r\n            <Icon icon={envelopeIcon} />\r\n            haly.inbox@gmail.com\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a title=\"phone\" href=\"tel:971-213-3036\">\r\n            <Icon icon={phoneIcon} />\r\n            971-213-3036\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a title=\"resume\" href={resume} download=\"Ha_Ly_resume\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Icon icon={fileIcon} />\r\n            resume (pdf, 158kb)\r\n          </a>\r\n        </li>\r\n      </Contacts>\r\n    </Page>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Page = styled.section`\r\n  width: 100%;\r\n  height: 500px;\r\n`\r\n\r\nexport default function MyWorkPage() {\r\n  return (\r\n    <Page id=\"my work\">\r\n      my work\r\n    </Page>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Page = styled.section`\r\n  width: 100%;\r\n  height: 500px;\r\n`\r\n\r\nexport default function MyProjectsPage() {\r\n  return (\r\n    <Page id=\"my projects\">\r\n      my projects\r\n    </Page>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDevice } from '../util'\r\n\r\nfunction LogoSvg() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"785.919\"\r\n      height=\"421.019\"\r\n      viewBox=\"0 0 7859.186 4210.186\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    >\r\n      <path d=\"M21 4191.186l-21-21v-1464l11-1542c88-635 605-1119 1239-1160 83-6 103-4 125 10l25 17-5 3054-32 115c-94 340-277 598-558 787-188 126-425 205-659 220-97 5-104 5-125-16zm3369-1c-20-20-20-33-20-1498l16-1573c104-613 620-1079 1235-1116 100-6 107-5 128 16l21 21v1473l-15 1562c-72 444-352 818-756 1009-115 55-234 90-372 110-147 22-212 21-237-4zm2795 4c-277-42-537-175-741-378-236-237-366-526-390-870-6-87-5-95 15-115l22-22 822 4c805 3 824 3 903 24 197 53 364 131 505 237 315 238 507 591 535 986 6 88 5 97-16 123l-21 27-772-1c-601-1-792-4-862-15zm-3925-1399c-233-48-408-183-506-390-66-138-67-152-72-559-2-263 0-377 8-396 21-50 38-52 441-48 359 4 377 5 444 27 251 83 423 258 492 501 16 58 18 107 18 452 0 358-1 389-18 405-16 17-47 18-380 20-270 1-378-2-427-12z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default function Logo({ wrapper }) {\r\n  const [, isOneColumnLayout] = useDevice()\r\n\r\n  if (!wrapper) return <LogoSvg />\r\n  else {\r\n    const Wrapper = wrapper\r\n    return <Wrapper isOneColumnLayout={isOneColumnLayout}><LogoSvg /></Wrapper>\r\n  }\r\n}\r\n","import React, { useState } from 'react';\nimport Nav from './components/Nav';\nimport { theme, GlobalStyles, breakpoints } from './globalStyle'\nimport { ThemeProvider } from 'styled-components'\nimport HomePage from './components/HomePage';\nimport MyWorkPage from './components/MyWorkPage'\nimport MyProjectsPage from './components/MyProjectsPage'\nimport styled from 'styled-components'\nimport Logo from './components/Logo'\nimport { useDevice } from './util'\n\nconst Watermark = styled.div`\n  position: absolute;\n  top: ${props => props.isOneColumnLayout ? '5rem' : '15rem'};\n  left: ${props => props.isOneColumnLayout ? '0' : '40%'};\n  right: 0;\n  z-index: -1;\n  fill: ${theme.watermark};\n  transform: ${props => props.isOneColumnLayout ? 'rotate(-10deg) scale(0.7)' : 'rotate(-10deg) scale(1.1)'};\n`\nconst AppContainer = styled.main`\n  overflow-x: hidden;\n  width: 100%;\n  margin: 0 auto;\n  position: relative;\n  max-width: ${props => {\n    switch (props.device) {\n      case 'mobile':\n        return `${breakpoints.mobile}px`\n      case 'tablet':\n        return `${breakpoints.tablet}px`\n      default:\n        return `${breakpoints.laptop}px`\n    }\n  }};\n`\n\nfunction App() {\n  const [device] = useDevice()\n  const [currentPage, setCurrentPage] = useState('home')\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <AppContainer device={device}>\n        <Nav onItemClick={item => setCurrentPage(item)} selectedItem={currentPage} />\n        <Logo wrapper={Watermark} />\n        <HomePage />\n        <MyWorkPage />\n        <MyProjectsPage />\n      </AppContainer>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}