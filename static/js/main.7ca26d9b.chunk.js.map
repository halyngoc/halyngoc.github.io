{"version":3,"sources":["globalStyle.ts","components/Section.tsx","data.ts","util.ts","components/Experience.tsx","components/Skills.tsx","components/Link.tsx","components/Projects.tsx","components/Education.tsx","components/Contacts.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["breakpoints","GlobalStyles","createGlobalStyle","theme","palette","background","text","Section","styled","section","spacing","sectionMargin","SectionItem","div","skills","languages","other","experience","title","place","description","time","tools","projects","url","affiliation","education","useDevice","windowWidth","useState","window","innerWidth","width","setWidth","useEffect","onWindowResize","addEventListener","removeEventListener","useWindowWidth","ExperienceList","ul","withTimeline","css","Experience","device","map","data","key","join","Skills","IconLink","a","Link","isIconOnly","label","children","href","target","rel","undefined","icon","linkIcon","Project","Projects","project","Education","ContactList","ContactListItem","li","Contacts","linkedinAlt","githubAlt","mailIcon","Main","main","appTopMargin","NameSection","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","numberOfColumns","columnWidth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7ca26d9b.chunk.js","sourcesContent":["import { createGlobalStyle, DefaultTheme } from \"styled-components\";\n\nexport const breakpoints = {\n  mobile: 600,\n  tablet: 960,\n  laptop: 1280,\n  desktop: 1920,\n};\n\nexport const defaultTheme: DefaultTheme = {\n  palette: {\n    background: \"#EEEEEE\",\n    text: \"#2F576E\",\n  },\n  spacing: {\n    numberOfColumns: 12,\n    columnWidth: \"calc(100vw / 12)\",\n    appTopMargin: \"calc(100vw / 12)\",\n    sectionMargin: \"0 calc(100vw / 12) 2rem calc(100vw / 12)\",\n  },\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n    font-family: 'Karla', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  body {\n    background-color: ${({ theme }) => theme.palette.background};\n    color: ${({ theme }) => theme.palette.text};\n    margin: 0;\n  }\n\n  h1 {\n    font-family: 'Handlee', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    font-weight: normal;\n    font-size: 1.5rem;\n    margin: 0.5rem 0;\n  }\n  \n  h2 {\n    font-weight: semibold;\n    font-size: 1rem;\n    margin: 0.3rem 0;\n  }\n\n  p {\n    margin: 0.3rem 0;\n  }\n\n  /* Scrollbar */\n  *::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n  }\n  *::-webkit-scrollbar-track {\n    background: none;\n  }\n  *::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.palette.text};\n    border-radius: 10px;\n    border: none;\n  }\n  * {\n    scrollbar-color: ${({ theme }) => theme.palette.text + \" #ffffff00\"};\n  }\n`;\n","import styled from \"styled-components\";\nimport { breakpoints } from \"../globalStyle\";\n\nexport const Section = styled.section`\n  margin: ${({ theme }) => theme.spacing.sectionMargin};\n  max-width: ${breakpoints.mobile}px;\n`;\n\nexport const SectionItem = styled.div`\n  margin-bottom: 2rem;\n`;\n","type Skills = {\n  languages: string[];\n  other: string[];\n};\n\ntype Experience = {\n  title: string;\n  place: string;\n  time: string;\n  description?: string;\n  tools: string[];\n};\n\ntype Project = {\n  title: string;\n  affiliation?: string;\n  time: string;\n  description: string;\n  url?: string;\n};\n\ntype Education = {\n  title: string;\n  school: string;\n  details: string;\n};\n\nexport const skills: Skills = {\n  languages: [\"TypeScript\", \"JavaScript\", \"HTML\", \"CSS\"],\n  other: [\"React\", \"Figma\", \"Git\", \"GitHub\", \"MUI\", \"UX\", \"Accessibility\"],\n};\n\nexport const experience: Experience[] = [\n  {\n    title: \"Software Engineer, UX Infrastructure\",\n    place: \"Color Health, Burlingame, CA\",\n    description:\n      \"Worked with a cross-functional team which focuses on user experience, accessibility, localization, shared components, and overall front-end developer experience of various covid and healthcare products\",\n    time: \"3/2022 - 2/2023\",\n    tools: [\n      \"TypeScript\",\n      \"React\",\n      \"MUI\",\n      \"UX\",\n      \"Accessibility\",\n      \"Localization\",\n    ],\n  },\n  {\n    title: \"Junior Software Developer\",\n    place: \"6 Degrees Health, Hillsboro, OR\",\n    description:\n      \"Developed and maintained a full-stack web application which processes health insurance claims\",\n    time: \"8/2020 - 2/2022\",\n    tools: [\n      \"Go\",\n      \"TypeScript\",\n      \"Javascript\",\n      \"React\",\n      \"PostgreSQL\",\n      \"MongoDB\",\n      \"GCP\",\n    ],\n  },\n  {\n    title: \"Web Developer Intern\",\n    place: \"Portland General Electric, Portland, OR\",\n    time: \"9/2019 - 12/2019\",\n    description:\n      \"Worked with a team of 4 to architect and implement a new internal portal to reprocess errors, which connects to on-premise SQL servers and IBM DataPower SOAP endpoints\",\n    tools: [\"React\", \"TypeScript\", \"SPFx\", \"AWS\", \"SharePoint Online\"],\n  },\n  {\n    title: \"SharePoint Web Developer Intern\",\n    place: \"Portland General Electric, Portland, OR\",\n    time: \"6/2019 - 9/2019\",\n    description:\n      \"Collaborated with a team of 7 to develop a new company intranet site using SharePoint Online\",\n    tools: [\n      \"SharePoint Online\",\n      \"SPFx\",\n      \"TypeScript\",\n      \"MS Flow\",\n      \"MS PowerApps\",\n    ],\n  },\n];\n\nexport const projects: Project[] = [\n  {\n    title: \"Caro\",\n    time: \"3/2023 - present\",\n    description: \"Web version of the game of caro\",\n  },\n  {\n    title: \"Recipedia\",\n    time: \"4/2020 - 6/2020\",\n    description: \"Web app for recipes search and dashboard\",\n    url: \"https://github.com/halyngoc/recipedia\",\n  },\n  {\n    title: \"Kanabi UI\",\n    affiliation: \"City of Portland (PSU capstone project)\",\n    time: \"1/2020 - 6/2020\",\n    description:\n      \"Front-end web UI for the City of Portland’s Cannabis database\",\n    url: \"https://github.com/FireAnts-PSU-Capstone-team/cannabis-db-ui\",\n  },\n];\n\nexport const education: Education = {\n  title: \"BS Computer Science\",\n  school: \"Portland State University\",\n  details: \"Member of PSU Viking Robotics Society\",\n};\n","import { useState, useEffect } from 'react'\nimport { breakpoints } from './globalStyle'\n\ntype Device = 'mobile' | 'tablet' | 'laptop' | 'desktop'\n\nfunction useWindowWidth(): number {\n  const [width, setWidth] = useState(window.innerWidth)\n\n  useEffect(() => {\n    const onWindowResize = () => setWidth(window.innerWidth)\n    window.addEventListener('resize', onWindowResize)\n    return () => window.removeEventListener('resize', onWindowResize)\n  })\n\n  return width\n}\n\nexport function useDevice(): Device {\n  const windowWidth = useWindowWidth()\n\n  if (windowWidth < breakpoints.mobile) return 'mobile'\n  else if (windowWidth < breakpoints.tablet) return 'tablet'\n  else if (windowWidth < breakpoints.laptop) return 'laptop'\n  else return 'desktop'\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Section } from \"./Section\";\nimport { experience } from \"../data\";\nimport { useDevice } from \"../util\";\n\nconst ExperienceList = styled.ul<{ withTimeline: boolean }>`\n  list-style: none;\n  padding: 0;\n  margin-left: 1rem;\n  width: fit-content;\n  max-width: calc(100% - 3rem);\n  position: relative;\n  left: -3rem;\n\n  h2 > span {\n    font-weight: normal;\n  }\n\n  > li {\n    position: relative;\n    margin: 0 0 2rem 2rem;\n  }\n\n  ${({ withTimeline }) =>\n    withTimeline &&\n    css`\n      ::before {\n        content: \" \";\n        position: absolute;\n        top: 0;\n        left: -2.5px;\n        width: 5px;\n        height: 100%;\n        background-color: ${({ theme }) => theme.palette.text};\n      }\n\n      > li::before {\n        content: \" \";\n        position: absolute;\n        top: -0.2rem;\n        left: -3rem;\n        width: 2rem;\n        height: 2rem;\n        border: 5px solid ${({ theme }) => theme.palette.text};\n        background-color: ${({ theme }) => theme.palette.background};\n        border-radius: 1rem;\n      }\n    `}\n`;\n\nexport default function Experience() {\n  const device = useDevice();\n  return (\n    <Section>\n      <h1>Experience</h1>\n      <ExperienceList withTimeline={device !== \"mobile\"}>\n        {experience.map((data) => (\n          <li key={data.title + data.place}>\n            <h2>\n              {data.title}\n              <span> - {data.place}</span>\n            </h2>\n            <p>{data.time}</p>\n            {data.description && <p>{data.description}</p>}\n            <p>\n              <i>{data.tools.join(\", \")}</i>\n            </p>\n          </li>\n        ))}\n      </ExperienceList>\n    </Section>\n  );\n}\n","import React from 'react'\nimport { Section, SectionItem } from './Section'\nimport { skills } from '../data'\n\nexport default function Skills() {\n  return (\n    <Section>\n      <h1>Skills</h1>\n      <SectionItem>\n        <h2>Languages</h2>\n        <p>{skills.languages.join(', ')}</p>\n      </SectionItem>\n      <SectionItem>\n        <h2>Other</h2>\n        <p>{skills.other.join(', ')}</p>\n      </SectionItem>\n    </Section>\n  )\n}\n","import React, { PropsWithChildren } from \"react\";\nimport linkIcon from \"@iconify/icons-uil/external-link-alt\";\nimport InlineIcon from \"@iconify/react\";\nimport styled from \"styled-components\";\n\nconst IconLink = styled.a`\n  color: ${({ theme }) => theme.palette.text};\n  text-decoration: none;\n  border-radius: 20px;\n  display: block;\n  width: 2.5rem;\n  height: 2.5rem;\n  text-align: center;\n\n  :focus-visible,\n  :hover {\n    outline: none;\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.palette.text};\n  }\n\n  :active {\n    color: ${({ theme }) => theme.palette.background};\n    background-color: ${({ theme }) => theme.palette.text};\n  }\n`;\n\ntype Props = {\n  isIconOnly?: boolean;\n  url: string;\n  label: string;\n};\n\nexport default function Link({\n  isIconOnly,\n  url,\n  label,\n  children,\n}: PropsWithChildren<Props>) {\n  if (isIconOnly) {\n    return (\n      <IconLink href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {children}\n      </IconLink>\n    );\n  }\n  return (\n    <a\n      aria-label={isIconOnly ? label : undefined}\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n      <InlineIcon icon={linkIcon} />\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Section, SectionItem } from \"./Section\";\nimport { projects } from \"../data\";\nimport styled from \"styled-components\";\nimport Link from \"./Link\";\n\nconst Project = styled(SectionItem)`\n  h2 {\n    display: inline;\n    margin-right: 0.4rem;\n    margin-top: 0.5rem;\n  }\n\n  svg {\n    transform: translateY(0.1rem) !important;\n  }\n`;\n\nexport default function Projects() {\n  return (\n    <Section>\n      <h1>Projects</h1>\n      {projects.map((project) => (\n        <Project key={project.title}>\n          {project.url ? (\n            <Link label=\"GitHub\" url={project.url}>\n              <h2>{project.title}</h2>\n            </Link>\n          ) : (\n            <h2>{project.title}</h2>\n          )}\n          {project.affiliation && <p>{project.affiliation}</p>}\n          <p>{project.time}</p>\n          <p>{project.description}</p>\n        </Project>\n      ))}\n    </Section>\n  );\n}\n","import React from \"react\";\nimport { Section, SectionItem } from \"./Section\";\nimport { education } from \"../data\";\n\nexport default function Education() {\n  return (\n    <Section>\n      <h1>Education</h1>\n      <SectionItem key={education.title + education.school}>\n        <h2>{education.title}</h2>\n        <p>{education.school}</p>\n        <p>{education.details}</p>\n      </SectionItem>\n    </Section>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"@iconify/react\";\nimport githubAlt from \"@iconify/icons-uil/github-alt\";\nimport mailIcon from \"@iconify/icons-uil/envelope-alt\";\nimport linkedinAlt from \"@iconify/icons-uil/linkedin-alt\";\nimport Link from \"./Link\";\n\nconst ContactList = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  padding: 0;\n  margin: 0 -0.3rem;\n`;\n\nconst ContactListItem = styled.li`\n  margin-inline-end: 0.5rem;\n  font-size: 2rem;\n  width: fit-content;\n\n  svg {\n    height: 2.5rem;\n  }\n`;\n\nexport default function Contacts() {\n  return (\n    <ContactList>\n      <ContactListItem>\n        <Link\n          isIconOnly\n          label=\"LinkedIn\"\n          url=\"https://www.linkedin.com/in/halyngoc\"\n        >\n          <Icon icon={linkedinAlt} width=\"1.5rem\" />\n        </Link>\n      </ContactListItem>\n      <ContactListItem>\n        <Link isIconOnly label=\"Github\" url=\"https://github.com/halyngoc\">\n          <Icon icon={githubAlt} width=\"1.6rem\" />\n        </Link>\n      </ContactListItem>\n      <ContactListItem>\n        <Link isIconOnly label=\"Email\" url=\"mailto:haly.inbox@gmail.com\">\n          <Icon icon={mailIcon} width=\"1.6rem\" />\n        </Link>\n      </ContactListItem>\n    </ContactList>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Section } from \"./components/Section\";\nimport Experience from \"./components/Experience\";\nimport Skills from \"./components/Skills\";\nimport Projects from \"./components/Projects\";\nimport Education from \"./components/Education\";\nimport Contacts from \"./components/Contacts\";\n\nconst Main = styled.main`\n  margin: ${({ theme }) => theme.spacing.appTopMargin} 0;\n`;\n\nconst NameSection = styled(Section)`\n  div {\n    font-family: \"Fredericka the Great\";\n    font-size: 3.5rem;\n    margin-inline-start: 0;\n  }\n\n  p {\n    font-family: \"Handlee\";\n    font-size: 1.2rem;\n    margin-inline-start: 0.2rem;\n  }\n`;\n\nexport default function App() {\n  return (\n    <Main>\n      <NameSection>\n        <div>Ha Ly</div>\n        <p>Front-end Software Engineer</p>\n        <Contacts />\n      </NameSection>\n      <Skills />\n      <Experience />\n      <Projects />\n      <Education />\n    </Main>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n              alert('New content available! Close and reopen to see the updates.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyles, defaultTheme } from './globalStyle'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyles />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}